#!/usr/bin/env python
# coding: utf-8

# In[2]:


import os
import psycopg2
import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from tensorflow.python import keras
from tensorflow.python.keras.models import Sequential
from tensorflow.python.keras.layers import LSTM, Dense, Dropout

con = psycopg2.connect(host='localhost', database='deeplearning', user='postgres', password='026032', port='5433')
cur = con.cursor()

print("Conexão com bd ok!!!")


# In[5]:


#Carregar do banco de dados
sql = "SELECT binario FROM learn;"
df = pd.read_sql(sql, con)
print(df.head())


# In[ ]:


#Preparar as informações


# In[ ]:


#Rede Neural
model = Sequential()

model.add(LSTM(100, input_shape=(train_x.shape[1:]), activation='relu', return_sequences=True))
model.add(Dropout(0.2))

for i in range(10):
    model.add(LSTM(100), activation='relu')
    model.add(Dropout(0.2))
    
model.add(Dense(2, activation='softmax'))


# In[ ]:


#Treinar rede neural
opt = tf.keras.optimizers.Adam(lr = 0.001, decay = 1e-6)

model.compile(
    loss = 'sparse_categorical_crossentropy',
    optimizer = opt,
    metrics = ['accuracy'],
)

model.fit(x_train, y_train, batch_size = 100, epochs = 3, validation_data=(x_test, y_test))


# In[ ]:


#Visualizar resultado 

